---
name: Lint
on: pull_request

permissions:
  contents: read
  pull-requests: write

jobs:
  markdown:
    name: markdown
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Run markdownlint
        uses: DavidAnson/markdownlint-cli2-action@v9
  dockerfile:
    name: dockerfile
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Run hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          trusted-registries: docker.io,ghcr.io
  shell-scripts:
    name: shell scripts
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Run ShellCheck
        uses: luizm/action-sh-checker@master
  yaml:
    name: yaml
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Run Yamllint
        uses: frenck/action-yamllint@v1.4.0
  php-ext-doc:
    name: php extension documentation
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Checking if enabled PHP extensions are documented in README.md
        run: |
          set +e
          LINE=$(grep -n '## PHP extensions' README.md | cut -f 1 -d :)
          STATUS=0
          trap '{ (( STATUS++ )) ; }' ERR
          for EXT in $(grep 'ARG php_enable_extensions' Dockerfile | cut -f 2 -d = | tr --delete '"'); do
                  grep -q -- "- ${EXT}\$" README.md || (echo "::error file=README.md,line=${LINE}::PHP extension '${EXT}' not documented." ; exit 1)
          done
          exit ${STATUS}
